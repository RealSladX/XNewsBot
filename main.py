from crawler import curate_tech_news, soup_crawl
from approval import send_approval_email, send_test_email
import json
import nltk
from poster import (
    generate_post_text,
    search_image_pixabay,
    google_image_search,
    download_image,
)
from newspaper import popular_urls
import matplotlib.pyplot as plt
from matplotlib.offsetbox import OffsetImage, AnnotationBbox

# Download NLTK data for keyword extraction
plt.rcParams["font.family"] = "FiraCode Nerd Font"
with open("config.json", "r") as f:
    config = json.load(f)


x_keys = [
    config["x_api_credentials"]["consumer_key"],
    config["x_api_credentials"]["consumer_secret"],
    config["x_api_credentials"]["access_token"],
    config["x_api_credentials"]["access_token_secret"],
]

soups_urls = [
    "https://www.foxnews.com/world/thousands-attend-corgi-competition-featuring-120-teams-across-europe-hes-really-proud",
    # "https://www.foxnews.com/category/science/air-and-space"
]

rss_urls = [
    "https://taskandpurpose.com/feed/",
    "https://www.army-technology.com/feed/",
    "https://www.defensenews.com/arc/outboundfeeds/rss/category/air/?outputType=xml",
    "https://www.defensenews.com/arc/outboundfeeds/rss/category/land/?outputType=xml",
    "https://www.defensenews.com/arc/outboundfeeds/rss/category/naval/?outputType=xml",
    "https://www.defensenews.com/arc/outboundfeeds/rss/category/pentagon/?outputType=xml",
    "https://www.defensenews.com/arc/outboundfeeds/rss/category/space/?outputType=xml",
    "https://www.defensenews.com/arc/outboundfeeds/rss/category/unmanned/?outputType=xml",
    "https://www.militarytimes.com/arc/outboundfeeds/rss/category/news/pentagon-congress/?outputType=xml",
    "https://www.c4isrnet.com/arc/outboundfeeds/rss/category/artificial-intelligence/?outputType=xml",
    "https://theconversation.com/us/articles.atom",
    "https://www.sciencenews.org/feed",
    "https://www.c4isrnet.com/arc/outboundfeeds/rss/category/unmanned/?outputType=xml",
    "https://www.c4isrnet.com/arc/outboundfeeds/rss/category/information-warfare/?outputType=xml",
    "https://www.c4isrnet.com/arc/outboundfeeds/rss/category/battlefield-tech/?outputType=xml",
    "https://www.c4isrnet.com/arc/outboundfeeds/rss/category/cyber/?outputType=xml",
    "https://www.c4isrnet.com/arc/outboundfeeds/rss/category/artificial-intelligence/?outputType=xml",
    "https://warontherocks.com/category/podcasts/war-on-the-rocks/feed/",
    "https://www.technologyreview.com/feed/",
    "https://www.wired.com/feed/category/business/latest/rss",
    "https://www.wired.com/feed/tag/ai/latest/rss",
    "https://www.wired.com/feed/category/security/latest/rss",
    "https://www.wired.com/feed/category/science/latest/rss",
    "https://defensescoop.com/feed/",
    "https://aiscoop.com/feed/",
    "https://defensescoop.com/feed/",
    "https://cyberscoop.com/feed/",
    "https://www.popularmechanics.com/rss/all.xml/",
    "https://arstechnica.com/feed/",
    "https://www.vice.com/en/feed/",
    "https://thecitizen.com/feed/",
    "https://www.techmeme.com/feed.xml",
    "https://techcrunch.com/feed/",
    "https://www.theverge.com/rss/index.xml",
    "https://spectrum.ieee.org/customfeeds/feed/all-topics/rss",
    "https://breakingdefense.com/full-rss-feed/?v=2",
    "https://feeds.feedburner.com/venturebeat/SZYF",
    "https://www.twz.com/feed",
    "https://nypost.com/feed/",
    "https://pagesix.com/feed/?_gl=1%2A11e7f5n%2A_ga%2AMjU0NDE4MzIxLjE3NTYwNjc3MTc.%2A_ga_0DZ7LHF5PZ%2AczE3NTYwNjc3MTYkbzEkZzEkdDE3NTYwNjc3MzIkajQ0JGwwJGgw",
    "https://www.newsmax.com/rss/Newsfront/16",
    "https://www.newsmax.com/rss/US/18/",
    "https://www.newsmax.com/rss/TheWire/118/",
    "https://www.newsmax.com/rss/SciTech/20/",
    "https://feeds.nbcnews.com/nbcnews/public/news",
    "https://www.theguardian.com/us/rss",
    "https://feeds.skynews.com/feeds/rss/us.xml",
    "https://feeds.skynews.com/feeds/rss/technology.xml",
    "https://feeds.skynews.com/feeds/rss/world.xml",
    "https://www.infoworld.com/news/feed/",
    "https://www.washingtontimes.com/rss/headlines/culture/technology/",
    "https://www.washingtontimes.com/rss/headlines/news/national/",
    "https://www.washingtontimes.com/rss/headlines/news/world/",
    "https://www.washingtontimes.com/rss/headlines/news/security/",
]
tech_keywords = [
    "fbi",
    "cia",
    "dod",
    "doj",
    "doi",
    "nsa",
    "hsa",
    "potus",
    "scotus",
    "america",
    "united",
    "college",
    "graduate",
    "graduated",
    "promote",
    "promoted",
    "promotion",
    "appoint",
    "appointment",
    "appointee",
    "appointments",
    "states",
    "state",
    "invent",
    "inventor",
    "invented",
    "invention",
    "brilliant",
    "public",
    "private",
    "cloud",
    "infrastructure",
    "grid",
    "electric",
    "electrical",
    "electricity",
    "ai",
    "ml",
    "llm",
    "vr",
    "ar",
    "ufo",
    "alien",
    "uav",
    "action",
    "bill",
    "passed",
    "remote",
    "satellite",
    "error",
    "cyber",
    "cybercrime",
    "fraud",
    "scam",
    "scammer",
    "scammed",
    "scamming",
    "ota",
    "caught",
    "catch",
    "global",
    "nuclear",
    "missile",
    "weapons",
    "weapon",
    "missiles",
    "launch",
    "power",
    "powerful",
    "plane",
    "tank",
    "tanker",
    "tanks",
    "tankers",
    "oil",
    "rig",
    "rigs",
    "rigged",
    "vehicle",
    "carrier",
    "ship",
    "destroyer",
    "rocket",
    "explosion",
    "explosive",
    "explosives",
    "explosions",
    "collision",
    "impact",
    "mass",
    "destruction",
    "bomb",
    "bomber",
    "vessel",
    "vessels",
    "energy",
    "money",
    "deal",
    "buy",
    "sell",
    "sold",
    "confess",
    "guilty",
    "innocent",
    "warning",
    "threat",
    "threaten",
    "trigger",
    "law",
    "lawyer",
    "lawfyl",
    "construction",
    "construct",
    "constructed",
    "break",
    "broken",
    "violated",
    "subpoena",
    "issue",
    "court",
    "supreme",
    "high",
    "king",
    "prime",
    "minister",
    "seceretary",
    "communication",
    "satellites",
    "scan",
    "detected",
    "detect",
    "detective",
    "investigate",
    "investigator",
    "investigation",
    "committee",
    "congress",
    "mayor",
    "governor",
    "sheriff",
    "senator",
    "representative",
    "computer",
    "computers",
    "virus",
    "breach",
    "data",
    "hack",
    "hacker",
    "hacking",
    "programming",
    "program",
    "programmer",
    "programs",
    "join",
    "forces",
    "forced",
    "force",
    "dilemma",
    "tech",
    "technology",
    "technological",
    "technologic",
    "technologically",
    "board",
    "mother",
    "component",
    "components",
    "company",
    "companies",
    "trust",
    "anti",
    "fund",
    "funding",
    "funded",
    "breached",
    "exploit",
    "exploits",
    "exploited",
    "blackmail",
    "leverage",
    "extort",
    "extortion",
    "peak",
    "climax",
    "tip",
    "anonymous",
    "witness",
    "testimony",
    "testament",
    "proof",
    "proved",
    "correct",
    "right",
    "wrong",
    "left",
    "north",
    "west",
    "east",
    "south",
    "idea",
    "legistlation",
    "constitution",
    "amendment",
    "rights",
    "first",
    "second",
    "third",
    "fourth",
    "fifth",
    "doctor",
    "medical",
    "simulation",
    "simulate",
    "simulated",
    "simulations",
    "flight",
    "expedition",
    "movement",
    "protest",
    "protests",
    "join",
    "unite",
    "software",
    "operation",
    "operations",
    "operating",
    "optic",
    "optics",
    "optical",
    "optimal",
    "optimize",
    "optimization",
    "training",
    "train",
    "valid",
    "validating",
    "validated",
    "benchmark",
    "silicon",
    "rare",
    "earth",
    "metals",
    "metal",
    "lithium",
    "gold",
    "silver",
    "copper",
    "kernel",
    "code",
    "python",
    "C",
    "C++",
    "C/C++",
    "coding",
    "system",
    "systems",
    "reveal",
    "revealing",
    "reveals",
    "revealed",
    "cybersecurity",
    "security",
    "dollar",
    "dollars",
    "whistle",
    "blow",
    "general",
    "colonel",
    "captain",
    "war",
    "attack",
    "officer",
    "soldier",
    "marine",
    "army",
    "navy",
    "air",
    "force",
    "space",
    "defense",
    "shield",
    "star",
    "national",
    "nation",
    "pentagon",
    "secret",
    "secrets",
    "token",
    "tokens",
    "tokenization",
    "processing",
    "processor",
    "chip",
    "semiconductor",
    "microchip",
    "chips",
    "microchips",
    "manufacture",
    "manufacturing",
    "industry",
    "hoax",
    "cruel",
    "critical",
    "crucial",
    "classify",
    "classified",
    "file",
    "files",
    "document",
    "documents",
    "reports",
    "paper",
    "papers",
    "research",
    "researched",
    "researcher",
    "review",
    "deputy",
    "deputize",
    "deputized",
    "fire",
    "fired",
    "coast",
    "guard",
    "guardian",
    "guarding",
    "win",
    "winningscandal",
    "blockchain",
    "quantum",
    "robotics",
    "transformer",
    "gpt",
    "chat",
    "language",
    "model",
    "large",
    "military",
    "unmanned",
    "drone",
    "drones",
    "swarm",
    "fleet",
    "platoon",
    "squad",
    "team",
    "lead",
    "leads",
    "leader",
    "leading",
    "cutting",
    "edge",
    "art",
    "leak",
    "leaked",
    "leaks",
    "leaker",
    "whistleblower",
    "blower",
    "android",
    "droid",
    "cable",
    "reception",
    "mobile",
    "home",
    "base",
    "basis",
    "based",
    "bases",
    "station",
    "stations",
    "site",
    "black",
    "sites",
    "website",
    "websites",
    "autonomous",
    "breakthrough",
    "million",
    "billion",
    "trillion",
    "machine",
    "deep",
    "algorithm",
    "learning",
    "arrested",
    "arrest",
    "arrests",
    "multiple",
    "media",
    "social",
    "disaster",
    "security",
    "risk",
    "danger",
    "warfare",
    "advanced",
    "artificial",
    "intelligenceadvancement",
    "discover",
    "discovery",
    "discovered",
    "scientist",
    "test",
    "tests",
    "testing",
    "tested",
    "experiment",
    "experimenting",
    "experiments",
    "experimented",
    "human",
    "humanity",
    "result",
    "seals",
    "sealed",
    "indictment",
    "warrant",
    "results",
    "streamer",
    "youtuber",
    "director",
    "president",
    "auto",
    "robot",
    "bot",
    "agent",
    "succeed",
    "succeeded",
    "succeeds",
    "success",
    "fail",
    "failed",
    "fails",
    "failure",
    "expose",
    "exposed",
    "info",
    "information",
    "office",
    "justice",
    "homeland",
    "chief",
    "judge",
    "jury",
    "trial",
    "content",
    "creator",
    "developer",
    "develop",
    "create",
    "created",
    "developedcreates",
    "develops",
    "engineer",
    "engineering",
    "spear",
    "head",
    "top",
    "chair",
    "chairman",
    "spy",
    "spied",
    "spying",
    "espionage",
    "deploy",
    "deployment",
    "deployed",
    "airspace",
    "fighters",
    "fight",
    "fighter",
    "arsenal",
    "armory",
    "treasury",
    "target",
    "targeted",
    "targets",
    "reserve",
    "reservation",
    "reserved",
    "reservations",
    "sea",
    "boat",
    "ocean",
    "city",
    "country",
    "province",
    "locations",
    "location",
    "geography",
    "geopolitical",
    "strategy",
    "strategic",
    "stategies",
    "laser",
    "plasma",
    "secretive",
    "CEO",
    "computing",
    "computation",
    "aienabled",
    "enable",
    "enabled",
    "enabling",
    "disabled",
    "disable",
    "math",
    "mathematics",
    "mathematician",
    "anomaly",
    "mission",
    "ops",
    "psyops",
    "op",
    "psyop",
    "delta",
    "deadline",
    "stats",
    "stat",
    "statistic",
    "statistics",
    "statistically",
    "percent",
    "percentage",
    "population",
    "report",
    "findings",
    "finding",
    "found",
    "cover",
    "covered",
    "covers",
    "land",
    "landed",
    "landing",
    "craft",
    "aircraft",
    "underwater",
    "water",
    "submarine",
    "spacecraft",
    "network",
    "networks",
    "networking",
    "internet",
    "web",
    "server",
    "servers",
    "webserver",
    "webservers",
    "save",
    "saved",
    "saving",
    "storage",
    "complex",
    "framework",
    "plan",
    "planning",
    "planned",
    "plans",
    "planner",
    "gun",
    "ammo",
    "ammunition",
    "teach",
    "teaches",
    "taught",
    "teacher",
    "professor",
    "university",
    "school",
    "subject",
    "student",
    "provider",
    "provide",
    "provides",
    "provided",
]

if __name__ == "__main__":
    pass
    try:
        nltk.data.find("tokenizers/punkt")
        nltk.data.find("corpora/stopwords")
    except LookupError:
        nltk.download("punkt")
        nltk.download("punkt_tab")
        nltk.download("stopwords")
    # for url in soups_urls:
    #     soup_crawl(url)
    res = curate_tech_news(rss_urls, tech_keywords)
    for r in res:
        imgs = []
        r["post_text"] = generate_post_text(r["summary"], config["genai_key"])
        print(r['post_text'])
        res_img = download_image(r["img"], filename="./imgs/res.jpg")
        if res_img:
            fig, ax = plt.subplots(layout="tight")
            image = plt.imread(res_img)
            ax_img = ax.imshow(image)
            left, right, bottom, top = ax_img.get_extent()
            ax.text(0, 0 - (2*(bottom / 40)), r["post_text"], fontsize=10, wrap=True)
            ax.text(0, 0 - ((bottom / 40)), r["url"], fontsize=10, wrap=True)
            ax.text(0, 0, r["keywords"], fontsize=10, wrap=True)
            plt.show()
        else:
            fig, ax = plt.subplots(layout="tight")
            ax.text(0, 0 - (2*40), r["post_text"], fontsize=10, wrap=True)
            ax.text(0, 0 - 40, r["url"], fontsize=10, wrap=True)
            ax.text(0, 0, r["keywords"], fontsize=10, wrap=True)
            plt.show()
        imgs.append(res_img)
    # try:
    #     img_paths = google_image_search(
    #         config["google_img_search"], config["cse_cx"], r["keywords"]
    #     )
    #     imgs = imgs + img_paths
    # except Exception as e:
    #     print(f"{e}")
    # try:
    #     img_urls = search_image_pixabay(r["keywords"], config['pixabay_api_key'])
    #     if img_urls:
    #         url_img = download_image(img_urls, filename=f"./imgs/pixabay.jpg")
    #         imgs.append(url_img)
    # except Exception as e:
    #     print(f"{e}")
    # for path in imgs:
    #     if path:
    #         fig, ax = plt.subplots(layout="tight")
    #         image = plt.imread(path)
    #         ax_img = ax.imshow(image)
    #         left, right, bottom, top = ax_img.get_extent()
    #         ax.text(0, 0 - (2*(bottom / 40)), r["post_text"], fontsize=10, wrap=True)
    #         ax.text(0, 0 - ((bottom / 40)), r["url"], fontsize=10, wrap=True)
    #         ax.text(0, 0, r["keywords"], fontsize=10, wrap=True)
    #         plt.show()
    # top_r.append(r)

    # while(count < 5):
    #     res = crawl_tech_news()
    #     top = curate_articles(res)
    #     print(top)
    #     # send_approval_email(top, 'imsladx@gmail.com')
    #
    #     post=top[0]['title']
    #
    #     time.sleep(300)
